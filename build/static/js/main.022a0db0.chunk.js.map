{"version":3,"sources":["Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css","images/image.png","Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","Components/Cards/Cards.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","country","active","carddetails","style","styles","infected","text","value","className","container","Grid","spacing","justify","map","detail","index","item","component","Card","xs","md","cx","key","margin","padding","height","width","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","url","fetchData","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","length","barChart","labels","datasets","label","backgroundColor","hoverBackgroundColor","options","legend","display","title","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Date","toLocaleDateString","weekday","year","month","day","toLocaleTimeString","countrydiv","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.022a0db0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1taet\",\"image\":\"Chart_image__3VA3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__38UhW\"};","module.exports = __webpack_public_path__ + \"static/media/image.9ddbdbc6.png\";","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({\n  data: { confirmed, recovered, deaths, lastUpdate },\n  country,\n}) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n  const active = confirmed[\"value\"] - recovered[\"value\"] - deaths[\"value\"];\n  let carddetails = [\n    {\n      style: styles.infected,\n      text: \"Infected cases\",\n      value: confirmed.value,\n\n    },\n    {\n      style: styles.recovered,\n      text: \"Recovered\",\n      value: recovered.value,\n    },\n    {\n      style: styles.deaths,\n      text: \"Deaths\",\n      value: deaths.value,\n    },\n    {\n      style: styles.active,\n      text: \"Active cases\",\n      value: active,\n    },\n  ];\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        {carddetails.map((detail, index) => (\n          <Grid\n            item\n            component={Card}\n            xs={12}\n            md={2}\n            className={cx(styles.Card, detail.style)}\n            key={index}\n            style={{ margin: \"0px 25.675px\", padding: \"4px\" , height: \"100px\" , width: \"500px\" }}\n          >\n            <CardContent>\n              <Typography color=\"textPrimary\" gutterBottom>\n                <b>{detail.text}</b>\n              </Typography>\n              <Typography variant=\"h5\">\n                <CountUp\n                  start={0}\n                  end={detail.value}\n                  duration={2}\n                  separator=\",\"\n                />\n              </Typography>\n            </CardContent>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {}\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? (\n    <Bar\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n              \"rgba(242, 234, 0, 0.5)\",\n            ],\n            hoverBackgroundColor: [\n              \"rgba(0, 77, 153)\",\n              \"rgba(30, 102, 49)\",\n              \"rgba(255, 51, 51)\",\n              \"rgba(204, 153, 0)\",\n            ],\n            data: [\n              confirmed.value,\n              recovered.value,\n              deaths.value,\n              confirmed.value - (recovered.value + deaths.value),\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : barChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, key) => (\n          <option key={key} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./Components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport coronaImage from \"./images/image.png\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n  };\n  render() {\n    const { data, country } = this.state;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    return (\n      <div className={styles.container}>        \n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n        <br />\n        <text>\n        <h1>  <b>COVID-19 - CORONA VIRUS PANDEMIC</b> </h1></text>\n        <i>Last Updated on: {new Date(data.lastUpdate).toLocaleDateString('en-US', options) + ',' + new Date(data.lastUpdate).toLocaleTimeString() } </i>\n        <br />\n        \n        <text>\n          <b>Reported Cases and Deaths Globally and Country wise</b>\n        </text>\n        <br />\n        <text>\n          <i>Select a Country from below list</i>\n          </text> \n          <CountryPicker className={styles.countrydiv} handleCountryChange={this.handleCountryChange} />\n        <br />\n        <br />\n        <Cards data={data} country={country} />        \n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2j4x5\",\"card\":\"Cards_card__2UJS0\",\"infected\":\"Cards_infected__3122_\",\"recovered\":\"Cards_recovered__3LHh9\",\"deaths\":\"Cards_deaths__12K_K\",\"active\":\"Cards_active__YCWOZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3oGVy\",\"image\":\"App_image__3J7BG\",\"countrydiv\":\"App_countrydiv__2fgEz\"};"],"sourceRoot":""}